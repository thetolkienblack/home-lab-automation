---
# NTP and Timezone Configuration Playbook
# Description: Configures NTP time synchronization and timezone for RHEL 10 and Debian 13
# Usage: ansible-playbook playbooks/ntp_timezone_config.yml

- name: "Configure NTP Time Synchronization and Timezone"
  hosts: all
  become: true
  gather_facts: true

  vars_files:
    - "{{ inventory_dir }}/../group_vars/all/main.yml"
    - "{{ inventory_dir }}/../group_vars/all/vault.yml"
    - "{{ inventory_dir }}/../host_vars/{{ inventory_hostname }}.yml"

  pre_tasks:
    - name: "Display current time before configuration"
      ansible.builtin.command: timedatectl status
      register: time_before
      changed_when: false

    - name: "Show current time status"
      ansible.builtin.debug:
        msg: "{{ time_before.stdout_lines }}"

    - name: "Check if firewall is active"
      ansible.builtin.command: "{{ 'systemctl is-active firewalld' if ansible_os_family == 'RedHat' else 'systemctl is-active ufw' }}"
      register: firewall_status
      failed_when: false
      changed_when: false

    - name: "Set firewall status fact"
      ansible.builtin.set_fact:
        firewall_active: "{{ firewall_status.stdout == 'active' }}"

  tasks:
    # ===========================================
    # TIMEZONE CONFIGURATION (Both OS families)
    # ===========================================
    - name: "Timezone debug"
      ansible.builtin.debug:
        msg: "Timezone is {{ timezone }}"

    - name: "Configure system timezone"
      community.general.timezone:
        name: "{{ timezone }}"
      notify:
        - Restart chronyd
        - Restart systemd-timesyncd

    - name: "Verify timezone configuration"
      ansible.builtin.command: timedatectl show --property=Timezone --value
      register: current_timezone
      changed_when: false
      failed_when: current_timezone.stdout != timezone

    # ===========================================
    # DEBIAN 13 - NTP CONFIGURATION
    # ===========================================

    - name: "Install systemd-timesyncd (Debian 13)"
      ansible.builtin.package:
        name: systemd-timesyncd
        state: present
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution_major_version | int >= 13
        - ntp_enabled | default(true)

    - name: "Stop and disable conflicting NTP services (Debian 13)"
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - ntp
        - chrony
        - ntpd
      failed_when: false
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution_major_version | int >= 13
        - ntp_enabled | default(true)

    - name: "Configure timesyncd (Debian 13)"
      ansible.builtin.template:
        src: "{{ playbook_dir }}/../../templates/system/ntp/timesyncd.conf.j2" # noqa no-relative-paths
        dest: /etc/systemd/timesyncd.conf
        owner: root
        group: root
        mode: '0644'
        backup: true
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution_major_version | int >= 13
        - ntp_enabled | default(true)
      notify: Restart systemd-timesyncd

    - name: "Configure systemd-timesyncd security (Debian 13)"
      ansible.builtin.lineinfile:
        path: /etc/systemd/timesyncd.conf
        insertafter: "^\\[Time\\]"
        line: "# Security: Connect only to authenticated time servers"
        state: present
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution_major_version | int >= 13
        - ntp_security_hardening | default(true)
        - ntp_enabled | default(true)

    - name: "Enable and start systemd-timesyncd (Debian 13)"
      ansible.builtin.systemd:
        name: systemd-timesyncd
        state: started
        enabled: true
        daemon_reload: true
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution_major_version | int >= 13
        - ntp_enabled | default(true)

    - name: "Configure UFW firewall for NTP (Debian 13)"
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution_major_version | int >= 13
        - firewall_enabled | default(true)
        - ntp_enabled | default(true)
      block:
        - name: "Allow NTP through UFW (Debian 13)"
          community.general.ufw:
            rule: allow
            port: '123'
            proto: udp
            comment: "NTP - Network Time Protocol"
            state: enabled
          when: firewall_active

        - name: "Allow NTP client connections UFW (Debian 13)"
          community.general.ufw:
            rule: allow
            direction: out
            port: '123'
            proto: udp
            comment: "NTP client connections"
          when: firewall_active

    # ===========================================
    # RHEL 10 - NTP CONFIGURATION
    # ===========================================

    - name: "Install chrony (RHEL 10)"
      ansible.builtin.package:
        name: chrony
        state: present
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - ntp_enabled | default(true)

    - name: "Stop and disable conflicting NTP services (RHEL 10)"
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - ntp
        - ntpd
        - systemd-timesyncd
      failed_when: false
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - ntp_enabled | default(true)

    - name: "Create chrony user if not exists (RHEL 10)"
      ansible.builtin.user:
        name: chrony
        system: true
        shell: /sbin/nologin
        home: /var/lib/chrony
        create_home: false
        state: present
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - ntp_enabled | default(true)

    - name: "Set secure permissions on chrony directories (RHEL 10)"
      ansible.builtin.file:
        path: "{{ item.path }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
        state: directory
      loop:
        - { path: "/var/lib/chrony", owner: "chrony", group: "chrony", mode: "0750" }
        - { path: "/var/log/chrony", owner: "chrony", group: "chrony", mode: "0750" }
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - ntp_enabled | default(true)

    - name: "Configure chrony (RHEL 10)"
      ansible.builtin.template:
        src: "{{ playbook_dir }}/../../templates/system/ntp/chrony.conf.j2" # noqa no-relative-paths
        dest: /etc/chrony.conf
        owner: root
        group: root
        mode: '0644'
        backup: true
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - ntp_enabled | default(true)
      notify: Restart chronyd

    - name: "Configure NTP security settings (RHEL 10)"
      ansible.builtin.lineinfile:
        path: /etc/chrony.conf
        line: "{{ item }}"
        state: present
      loop:
        - "# Security settings managed by Ansible"
        - "noclientlog"  # Don't log client accesses
        - "noserverstats"  # Don't accumulate server statistics
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - ntp_security_hardening | default(true)
        - ntp_enabled | default(true)
      notify: Restart chronyd

    - name: "Enable and start chronyd (RHEL 10)"
      ansible.builtin.systemd:
        name: chronyd
        state: started
        enabled: true
        daemon_reload: true
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - ntp_enabled | default(true)

    - name: "Configure firewalld for NTP (RHEL 10)"
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - firewall_enabled | default(true)
        - ntp_enabled | default(true)
      block:
        - name: "Allow NTP through firewalld (RHEL 10)"
          ansible.posix.firewalld:
            service: ntp
            permanent: true
            state: enabled
            immediate: true
          when: firewall_active

        - name: "Allow NTP client connections firewalld (RHEL 10)"
          ansible.posix.firewalld:
            port: 123/udp
            permanent: true
            state: enabled
            immediate: true
          when: firewall_active

    - name: "Configure SELinux for NTP (RHEL 10)"
      ansible.posix.seboolean:
        name: "{{ item }}"
        state: true
        persistent: true
      loop:
        - chronyd_bind_all_unreserved_ports
        - use_ntp
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 10
        - ansible_selinux.status == "enabled"
        - ntp_enabled | default(true)

    # ===========================================
    # VERIFICATION TASKS
    # ===========================================

    - name: "Wait for NTP synchronization"
      ansible.builtin.wait_for:
        timeout: 30
      when: ntp_enabled | default(true)

    - name: "Verify NTP synchronization (Debian 13)"
      ansible.builtin.command: timedatectl show --property=NTPSynchronized --value
      register: ntp_sync_debian
      changed_when: false
      when:
        - ansible_os_family == "Debian"
        - ntp_enabled | default(true)

    - name: "Verify NTP synchronization (RHEL 10)"
      ansible.builtin.command: chronyc sources -v
      register: ntp_sync_rhel
      changed_when: false
      when:
        - ansible_os_family == "RedHat"
        - ntp_enabled | default(true)

    - name: "Get chronyd tracking status (RHEL 10)"
      ansible.builtin.command: chronyc tracking
      register: chrony_tracking
      changed_when: false
      when:
        - ansible_os_family == "RedHat"
        - ntp_enabled | default(true)

    - name: "Display NTP sync status (Debian 13)"
      ansible.builtin.debug:
        msg:
          - "NTP synchronization status: {{ 'SYNCHRONIZED' if ntp_sync_debian.stdout == 'yes' else 'NOT SYNCHRONIZED' }}"
          - "Timezone: {{ current_timezone.stdout }}"
      when:
        - ansible_os_family == "Debian"
        - ntp_enabled | default(true)
        - ntp_sync_debian is defined

    - name: "Display NTP sync status (RHEL 10)"
      ansible.builtin.debug:
        msg:
          - "Chrony sources:"
          - "{{ ntp_sync_rhel.stdout_lines }}"
          - ""
          - "Chrony tracking:"
          - "{{ chrony_tracking.stdout_lines }}"
          - ""
          - "Timezone: {{ current_timezone.stdout }}"
      when:
        - ansible_os_family == "RedHat"
        - ntp_enabled | default(true)
        - ntp_sync_rhel is defined
        - chrony_tracking is defined

  post_tasks:
    - name: "Display final time status"
      ansible.builtin.command: timedatectl status
      register: time_after
      changed_when: false

    - name: "Show final time synchronization status"
      ansible.builtin.debug:
        msg:
          - "=== FINAL TIME CONFIGURATION ==="
          - "{{ time_after.stdout_lines }}"
          - ""
          - "Configuration Summary:"
          - "- Timezone: {{ timezone }}"
          - "- NTP Enabled: {{ ntp_enabled }}"
          - "- Firewall Configured: {{ firewall_enabled and firewall_active }}"
          - "- Security Hardening: {{ ntp_security_hardening }}"
          - "- NTP Servers: {{ ntp_servers | join(', ') }}"

  handlers:
    - name: Restart chronyd
      ansible.builtin.systemd:
        name: chronyd
        state: restarted
      when:
        - ansible_os_family == "RedHat"
        - ntp_enabled | default(true)

    - name: Restart systemd-timesyncd
      ansible.builtin.systemd:
        name: systemd-timesyncd
        state: restarted
      when:
        - ansible_os_family == "Debian"
        - ntp_enabled | default(true)
