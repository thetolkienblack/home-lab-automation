# Fail2ban local configuration
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

[DEFAULT]
# IP addresses/ranges to ignore (whitelist)
ignoreip = 127.0.0.1/8 ::1 {{ whitelist_ips | join(' ') }}{% if tcp_wrappers_allow_private_networks %} 192.168.0.0/16 10.10.0.0/16 172.16.0.0/12{% endif %}

# Ban settings
bantime = {{ fail2ban_bantime }}
findtime = {{ fail2ban_findtime }}
maxretry = {{ fail2ban_maxretry }}

# Backend to use
backend = {{ fail2ban_backend }}

[sshd]
# SSH jail configuration
enabled = true
port = {{ ssh_port }}
filter = sshd
logpath = /var/log/auth.log
maxretry = {{ fail2ban_ssh_maxretry }}
bantime = {{ fail2ban_bantime }}
findtime = {{ fail2ban_findtime }}

# SSH brute force protection with shorter retry limit
[ssh-iptables]
enabled = true
port = {{ ssh_port }}
filter = sshd
logpath = /var/log/auth.log
action = iptables[name=SSH, port=ssh, protocol=tcp]
maxretry = {{ fail2ban_ssh_maxretry }}
bantime = {{ fail2ban_bantime }}
findtime = {{ fail2ban_findtime }}

# Protect against SSH login attempts with invalid users
[sshd-invaliduser]
enabled = true
port = {{ ssh_port }}
filter = sshd
logpath = /var/log/auth.log
action = iptables[name=SSH-InvalidUser, port=ssh, protocol=tcp]
maxretry = {{ fail2ban_ssh_maxretry }}
bantime = {{ fail2ban_bantime }}
findtime = {{ fail2ban_findtime }}

# Additional security jails
[recidive]
port = {{ ssh_port }}
filter = recidive
logpath = /var/log/fail2ban.log
action = iptables-allports[name=recidive]
maxretry = {{ fail2ban_ssh_maxretry }}
bantime = {{ fail2ban_bantime }}
findtime = {{ fail2ban_findtime }}
