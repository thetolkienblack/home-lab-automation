# Mimir configuration file
# Generated by Ansible

target: {{ mimir_target }}

multitenancy_enabled: false

server:
  http_listen_address: {{ mimir_http_listen_address }}
  http_listen_port: {{ mimir_http_listen_port }}
  grpc_listen_port: {{ mimir_grpc_listen_port }}
  log_level: info

common:
  storage:
    backend: {{ mimir_storage_backend }}
{% if mimir_storage_backend == 'filesystem' %}
    filesystem:
      dir: {{ mimir_storage_filesystem_dir }}
{% endif %}

blocks_storage:
  backend: {{ mimir_storage_backend }}
{% if mimir_storage_backend == 'filesystem' %}
  filesystem:
    dir: {{ mimir_storage_filesystem_dir }}
{% endif %}
  tsdb:
    dir: {{ mimir_blocks_storage_tsdb_dir }}
  bucket_store:
    sync_interval: {{ mimir_blocks_storage_bucket_store_sync_interval }}

compactor:
  data_dir: {{ mimir_data_dir }}/compactor
  sharding_ring:
    kvstore:
      store: memberlist

distributor:
  pool:
    health_check_ingesters: true
  ring:
    kvstore:
      store: memberlist

ingester:
  ring:
    kvstore:
      store: memberlist
    replication_factor: 1

ruler:
  rule_path: {{ mimir_data_dir }}/rules

ruler_storage:
  backend: {{ mimir_storage_backend }}
{% if mimir_storage_backend == 'filesystem' %}
  filesystem:
    dir: {{ mimir_data_dir }}/rules
{% endif %}

alertmanager:
  data_dir: {{ mimir_data_dir }}/alertmanager
  external_url: http://localhost:{{ mimir_http_listen_port }}/alertmanager
  sharding_ring:
    replication_factor: 1
    kvstore:
      store: memberlist

alertmanager_storage:
  backend: {{ mimir_storage_backend }}
{% if mimir_storage_backend == 'filesystem' %}
  filesystem:
    dir: {{ mimir_data_dir }}/alertmanager
{% endif %}

memberlist:
  bind_port: 7946
  join_members:
    - localhost:7946

limits:
  ingestion_rate: 50000
  ingestion_burst_size: 100000
