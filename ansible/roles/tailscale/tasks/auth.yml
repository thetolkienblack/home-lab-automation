---
# Tailscale authentication tasks
- name: Validate that Tailscale auth token is defined
  ansible.builtin.assert:
    that:
      - tailscale_auth_key is defined
      - tailscale_auth_key | length > 0
    fail_msg: "Tailscale auth key must be defined (tailscale_auth_key variable)"
  when: tailscale_require_auth_key | default(false)
  tags: [tailscale, auth]

- name: Check if Tailscale is already authenticated
  ansible.builtin.command: tailscale status --json
  register: tailscale_status
  changed_when: false
  failed_when: false
  tags: [tailscale, auth]

- name: Parse Tailscale status
  ansible.builtin.set_fact:
    tailscale_authenticated: "{{ (tailscale_status.stdout | from_json).BackendState == 'Running' }}"
  when: tailscale_status.rc == 0
  tags: [tailscale, auth]

- name: Set default authentication status
  ansible.builtin.set_fact:
    tailscale_authenticated: false
  when: tailscale_status.rc != 0
  tags: [tailscale, auth]

- name: Build Tailscale up command arguments
  ansible.builtin.set_fact:
    tailscale_up_args: >-
      {{ '--accept-dns' if tailscale_accept_dns else '--accept-dns=false' }}
      {{ '--accept-routes' if tailscale_accept_routes else '--accept-routes=false' }}
      {{ '--advertise-exit-node' if tailscale_advertise_exit_node else '' }}
      {{ '--advertise-routes=' + (tailscale_advertise_routes | join(',')) if tailscale_advertise_routes | length > 0 else '' }}
      {{ '--snat-subnet-routes' if tailscale_snat_subnet_routes else '--snat-subnet-routes=false' }}
      {{ '--ssh' if tailscale_ssh else '--ssh=false' }}
      --timeout="{{ tailscale_timeout }}s"
  tags: [tailscale, auth]

- name: Authenticate Tailscale with auth key
  ansible.builtin.command: >
    tailscale up
    {{ tailscale_up_args }}
    --auth-key="{{ tailscale_auth_key }}"
  when:
    - not tailscale_authenticated
    - tailscale_auth_key is defined
    - tailscale_auth_key | length > 0
  no_log: true  # Prevents logging the auth key
  register: tailscale_auth_result
  changed_when: tailscale_auth_result.rc == 0
  tags: [tailscale, auth]

- name: Show approval message if needed
  ansible.builtin.debug:
    msg: "{{ tailscale_auth_result.stderr_lines }}"
  when:
    - tailscale_auth_result is defined
    - tailscale_auth_result.rc is defined
    - tailscale_auth_result.rc != 0
    - "'admin' in (tailscale_auth_result.stderr | default(''))"
  tags: [tailscale, auth]

- name: Update Tailscale configuration if already authenticated
  ansible.builtin.command: >
    tailscale up
    {{ tailscale_up_args }}
  when: tailscale_authenticated
  register: tailscale_update_result
  changed_when: tailscale_update_result.rc != 0
  tags: [tailscale, auth]

- name: Verify Tailscale status
  ansible.builtin.command: tailscale status
  register: final_tailscale_status
  changed_when: false
  tags: [tailscale, auth, verify]

- name: Display Tailscale status
  ansible.builtin.debug:
    msg: "{{ final_tailscale_status.stdout_lines }}"
  tags: [tailscale, auth, verify]
