---
# Install Calico CNI for k3s

- name: Wait for k3s to be ready before installing Calico
  ansible.builtin.command:
    cmd: "{{ k3s_install_dir }}/k3s kubectl get nodes"
  register: k3s_ready_check
  until: k3s_ready_check.rc == 0
  retries: 30
  delay: 10
  changed_when: false
  tags: [k3s, calico, install]

- name: Create Calico manifests directory
  ansible.builtin.file:
    path: "{{ k3s_config_dir }}/calico"
    state: directory
    owner: root
    group: root
    mode: "0755"
  tags: [k3s, calico, install]

- name: Download Calico operator manifest
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/tigera-operator.yaml"
    dest: "{{ k3s_config_dir }}/calico/tigera-operator.yaml"
    mode: "0644"
    timeout: 60
  tags: [k3s, calico, install]

- name: Create Calico custom resources configuration
  ansible.builtin.template:
    src: calico-custom-resources.yaml.j2
    dest: "{{ k3s_config_dir }}/calico/calico-custom-resources.yaml"
    owner: root
    group: root
    mode: "0644"
  tags: [k3s, calico, install]

- name: Apply Calico operator
  ansible.builtin.command:
    cmd: "{{ k3s_install_dir }}/k3s kubectl apply -f {{ k3s_config_dir }}/calico/tigera-operator.yaml"
  register: calico_operator
  changed_when: "'created' in calico_operator.stdout or 'configured' in calico_operator.stdout"
  tags: [k3s, calico, install]

- name: Wait for Calico operator to be ready
  ansible.builtin.command:
    cmd: "{{ k3s_install_dir }}/k3s kubectl wait --for=condition=available --timeout=300s deployment/tigera-operator -n tigera-operator"
  register: calico_operator_ready
  changed_when: false
  failed_when: false
  tags: [k3s, calico, install]

- name: Apply Calico custom resources
  ansible.builtin.command:
    cmd: "{{ k3s_install_dir }}/k3s kubectl apply -f {{ k3s_config_dir }}/calico/calico-custom-resources.yaml"
  register: calico_resources
  changed_when: "'created' in calico_resources.stdout or 'configured' in calico_resources.stdout"
  tags: [k3s, calico, install]

- name: Wait for Calico to be ready
  ansible.builtin.command:
    cmd: "{{ k3s_install_dir }}/k3s kubectl wait --for=condition=available --timeout=600s deployment/calico-kube-controllers -n calico-system"
  register: calico_ready
  changed_when: false
  failed_when: false
  tags: [k3s, calico, verify]

- name: Verify Calico pods are running
  ansible.builtin.command:
    cmd: "{{ k3s_install_dir }}/k3s kubectl get pods -n calico-system"
  register: calico_pods
  changed_when: false
  tags: [k3s, calico, verify]

- name: Display Calico status
  ansible.builtin.debug:
    msg: "{{ calico_pods.stdout_lines }}"
  tags: [k3s, calico, verify]
