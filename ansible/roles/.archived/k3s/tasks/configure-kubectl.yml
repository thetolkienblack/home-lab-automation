---
# Configure kubectl access

- name: Create .kube directory for root
  ansible.builtin.file:
    path: /root/.kube
    state: directory
    owner: root
    group: root
    mode: "0755"
  tags: [k3s, kubectl]

- name: Copy k3s kubeconfig to root .kube directory
  ansible.builtin.copy:
    src: "{{ k3s_kubeconfig_path }}"
    dest: /root/.kube/config
    owner: root
    group: root
    mode: "0600"
    remote_src: true
  tags: [k3s, kubectl]

- name: Create .kube directory for users
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    owner: "{{ ansible_env.USER }}"
    mode: "0755"
  when: ansible_env.USER != 'root'
  tags: [k3s, kubectl]

- name: Copy k3s kubeconfig to user .kube directory
  ansible.builtin.copy:
    src: "{{ k3s_kubeconfig_path }}"
    dest: "{{ k3s_kubeconfig_user_path }}"
    owner: "{{ ansible_env.USER }}"
    mode: "0600"
    remote_src: true
  when: ansible_env.USER != 'root'
  tags: [k3s, kubectl]

- name: Create kubectl symlink
  ansible.builtin.file:
    src: "{{ k3s_install_dir }}/k3s"
    dest: "{{ k3s_install_dir }}/kubectl"
    state: link
    force: true
  tags: [k3s, kubectl]

- name: Verify kubectl access
  ansible.builtin.command:
    cmd: "{{ k3s_install_dir }}/kubectl get nodes"
  register: kubectl_nodes
  changed_when: false
  failed_when: false
  tags: [k3s, kubectl, verify]

- name: Display kubectl nodes
  ansible.builtin.debug:
    msg: "{{ kubectl_nodes.stdout_lines }}"
  when: kubectl_nodes.rc == 0
  tags: [k3s, kubectl, verify]
