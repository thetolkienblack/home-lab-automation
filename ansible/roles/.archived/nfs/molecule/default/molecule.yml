---
dependency:
  name: galaxy
  options:
    requirements-file: ../../../../requirements.yml

driver:
  name: docker

platforms:
  - name: nfs-server-ubuntu
    image: geerlingguy/docker-ubuntu2204-ansible:latest
    command: /lib/systemd/systemd
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - nfs_servers

  - name: nfs-client-ubuntu
    image: geerlingguy/docker-ubuntu2204-ansible:latest
    command: /lib/systemd/systemd
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - nfs_clients

  - name: nfs-server-debian
    image: geerlingguy/docker-debian12-ansible:latest
    command: /lib/systemd/systemd
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - nfs_servers

provisioner:
  name: ansible
  config_options:
    defaults:
      callbacks_enabled: profile_tasks,timer
      stdout_callback: yaml
  inventory:
    group_vars:
      nfs_servers:
        nfs_mode: server
        nfs_exports:
          - path: /srv/nfs/shared
            clients:
              - host: "*"
                options: "rw,sync,no_subtree_check,no_root_squash"
            owner: root
            group: root
            mode: '0755'
            create: true
      nfs_clients:
        nfs_mode: client
        nfs_configure_firewall: false

verifier:
  name: ansible

scenario:
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - cleanup
    - destroy
