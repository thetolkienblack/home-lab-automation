---
# RHEL NTP configuration using chronyd
- name: Install chrony (RHEL)
  ansible.builtin.package:
    name: chrony
    state: present
  tags: [ntp, rhel, install]

- name: Stop and disable conflicting NTP services (RHEL)
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop:
    - ntp
    - ntpd
    - systemd-timesyncd
  failed_when: false
  tags: [ntp, rhel, configure]

- name: Create chrony user if not exists (RHEL)
  ansible.builtin.user:
    name: chrony
    system: true
    shell: /sbin/nologin
    home: /var/lib/chrony
    create_home: false
    state: present
  tags: [ntp, rhel, configure]

- name: Set secure permissions on chrony directories (RHEL)
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: directory
  loop:
    - {path: "/var/lib/chrony", owner: "chrony", group: "chrony", mode: "0750"}
    - {path: "/var/log/chrony", owner: "chrony", group: "chrony", mode: "0750"}
  tags: [ntp, rhel, configure]

- name: Configure chrony (RHEL)
  ansible.builtin.template:
    src: chrony.conf.j2
    dest: /etc/chrony.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: Restart chronyd
  tags: [ntp, rhel, configure]

- name: Configure NTP security settings (RHEL)
  ansible.builtin.lineinfile:
    path: /etc/chrony.conf
    line: "{{ item }}"
    state: present
  loop:
    - "# Security settings managed by Ansible"
    - "noclientlog"  # Don't log client accesses
    - "noserverstats"  # Don't accumulate server statistics
  when: ntp_security_hardening | default(true)
  notify: Restart chronyd
  tags: [ntp, rhel, configure]

- name: Enable and start chronyd (RHEL)
  ansible.builtin.systemd:
    name: chronyd
    state: started
    enabled: true
    daemon_reload: true
  tags: [ntp, rhel, service]

- name: Configure firewalld for NTP (RHEL)
  when:
    - firewall_enabled | default(true)
    - ntp_firewall_rules | default(true)
  block:
    - name: Check if firewalld is active
      ansible.builtin.command: systemctl is-active firewalld
      register: firewalld_status
      failed_when: false
      changed_when: false

    - name: Allow NTP through firewalld (RHEL)
      ansible.posix.firewalld:
        service: ntp
        permanent: true
        state: enabled
        immediate: true
      when: firewalld_status.stdout == "active"

    - name: Allow NTP client connections firewalld (RHEL)
      ansible.posix.firewalld:
        port: 123/udp
        permanent: true
        state: enabled
        immediate: true
      when: firewalld_status.stdout == "active"
  tags: [ntp, rhel, firewall]

- name: Configure SELinux for NTP (RHEL)
  ansible.posix.seboolean:
    name: "{{ item }}"
    state: true
    persistent: true
  loop:
    - chronyd_bind_all_unreserved_ports
    - use_ntp
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
  tags: [ntp, rhel, selinux]
