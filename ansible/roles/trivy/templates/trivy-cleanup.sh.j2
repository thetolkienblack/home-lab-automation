#!/bin/bash
# Trivy Report Cleanup Script
# Removes reports older than {{ trivy_report_retention_days }} days
# Generated by Ansible - DO NOT EDIT MANUALLY

set -euo pipefail

REPORTS_DIR="{{ trivy_reports_dir }}"
RETENTION_DAYS={{ trivy_report_retention_days }}
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
CLEANUP_LOG="${REPORTS_DIR}/cleanup_${TIMESTAMP}.log"

echo "=== Trivy Report Cleanup ===" > "${CLEANUP_LOG}"
echo "Started at: $(date)" >> "${CLEANUP_LOG}"
echo "Reports directory: ${REPORTS_DIR}" >> "${CLEANUP_LOG}"
echo "Retention period: ${RETENTION_DAYS} days" >> "${CLEANUP_LOG}"
echo "" >> "${CLEANUP_LOG}"

# Count files before cleanup
BEFORE_COUNT=$(find "${REPORTS_DIR}" -type f \( -name "*.json" -o -name "*.html" -o -name "*.txt" -o -name "*.sarif" \) 2>/dev/null | wc -l)
echo "Files before cleanup: ${BEFORE_COUNT}" >> "${CLEANUP_LOG}"

# Remove old reports
echo "Removing reports older than ${RETENTION_DAYS} days..." >> "${CLEANUP_LOG}"
DELETED=$(find "${REPORTS_DIR}" -type f \
    \( -name "*.json" -o -name "*.html" -o -name "*.txt" -o -name "*.sarif" \) \
    -mtime +${RETENTION_DAYS} \
    -delete -print 2>/dev/null | tee -a "${CLEANUP_LOG}" | wc -l)

# Count files after cleanup
AFTER_COUNT=$(find "${REPORTS_DIR}" -type f \( -name "*.json" -o -name "*.html" -o -name "*.txt" -o -name "*.sarif" \) 2>/dev/null | wc -l)

echo "" >> "${CLEANUP_LOG}"
echo "Files after cleanup: ${AFTER_COUNT}" >> "${CLEANUP_LOG}"
echo "Files deleted: ${DELETED}" >> "${CLEANUP_LOG}"
echo "Completed at: $(date)" >> "${CLEANUP_LOG}"

# Keep only last 10 cleanup logs
find "${REPORTS_DIR}" -name "cleanup_*.log" -type f | sort -r | tail -n +11 | xargs rm -f 2>/dev/null || true

exit 0
