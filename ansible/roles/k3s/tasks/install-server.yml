---
# Install k3s server

- name: Create k3s server configuration
  ansible.builtin.template:
    src: k3s-server-config.yaml.j2
    dest: "{{ k3s_config_dir }}/config.yaml"
    owner: root
    group: root
    mode: "0644"
  notify: restart k3s
  tags: [k3s, server, install]

- name: Download k3s installation script
  ansible.builtin.get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s-install.sh
    mode: "0755"
    timeout: 60
  tags: [k3s, server, install]

- name: Install k3s server
  ansible.builtin.shell: |
    set -o pipefail
    INSTALL_K3S_VERSION="{{ k3s_version }}" \
    INSTALL_K3S_EXEC="server" \
    K3S_TOKEN="{{ k3s_server_token | default('') }}" \
    sh /tmp/k3s-install.sh
  args:
    creates: "{{ k3s_install_dir }}/k3s"
    executable: /bin/bash
  environment:
    INSTALL_K3S_SKIP_START: "false"
  tags: [k3s, server, install]

- name: Ensure k3s server service is enabled and started
  ansible.builtin.systemd:
    name: k3s
    enabled: "{{ k3s_service_enabled }}"
    state: "{{ k3s_service_state }}"
    daemon_reload: true
  tags: [k3s, server, service]

- name: Wait for k3s server to be ready
  ansible.builtin.command:
    cmd: "{{ k3s_install_dir }}/k3s kubectl get nodes"
  register: k3s_nodes
  until: k3s_nodes.rc == 0
  retries: 30
  delay: 10
  changed_when: false
  when: k3s_wait_for_ready | bool
  tags: [k3s, server, verify]

- name: Get k3s server token
  ansible.builtin.slurp:
    src: "{{ k3s_token_file }}"
  register: k3s_token_content
  when: k3s_mode == 'server'
  tags: [k3s, server, token]

- name: Display k3s server token
  ansible.builtin.debug:
    msg: "K3s server token: {{ k3s_token_content['content'] | b64decode | trim }}"
  when:
    - k3s_mode == 'server'
    - k3s_token_content is defined
  tags: [k3s, server, token]

- name: Save k3s server token to fact
  ansible.builtin.set_fact:
    k3s_server_token: "{{ k3s_token_content['content'] | b64decode | trim }}"
  when:
    - k3s_mode == 'server'
    - k3s_token_content is defined
  tags: [k3s, server, token]
